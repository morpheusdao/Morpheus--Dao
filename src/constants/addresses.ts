import { Networks } from "./blockchain";

const AVAX_MAINNET = {
    DAO_ADDRESS: "0xaBe94f64a8BEB6849587ae07Ad0bF24E0660b396",
    ORACLE_ADDRESS: "0x1F5A6fFbCA07DF7044d9915E1cB3c3802169f6e3",
    CYPHER_ADDRESS: "0xEb3460a763B82c52F28B2e5042457A6C68f5755f",
    MIM_ADDRESS: "0x130966628846BFd36ff31a822705796e8cb8C18D",
    STAKING_ADDRESS: "0xf17c2a1CA254f77eA9C7Be4CD7E7E98A3150650e",
    STAKING_HELPER_ADDRESS: "0x35CEE17C6D0fd21294B4Fb40bfFa6bd5678C440A",
    CYPHER_BONDING_CALC_ADDRESS: "0x1B70e24d704863ADfEd28E54f566Fb80a7f636d4",
    TREASURY_ADDRESS: "0xFa100817Ba6fEcdDd8a6ED6F6A22db27fBC9e433",
    ZAPIN_ADDRESS: "0x2658FABc63F3566caDA18f2d925045A41451d6b0", //"0xb98007C04f475022bE681a890512518052CE6104",
    WORACLE_ADDRESS: "0xF79B8F07aa94fc2a0810a7428c172c0A4cDbA0B8",
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.AVAX) return AVAX_MAINNET;

    throw Error("Network don't support");
};
